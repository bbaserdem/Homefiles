;; INFO-BAR
;;╔═════════════════════════════════════════════════════════════════════════╗;;
;;║                  _____        __   .  _                                 ║;;
;;║                 |_   _|      / _|    | |                                ║;;
;;║                   | |  _ __ | |_ ___ | |__   __ _ _ __                  ║;;
;;║                   | | | '_ \|  _/ _ \| '_ \ / _` | '__|                 ║;;
;;║                  _| |_| | | | || (_) | |_) | (_| | |                    ║;;
;;║                 |_____|_| |_|_| \___/|_.__/ \__,_|_|                    ║;;
;;╚═════════════════════════════════════════════════════════════════════════╝;;
;; Main container
(defwidget vbox [?class ?style ?valign ?halign ?vexpand ?hexpand ?width ?height ?active ?tooltip ?visible ?space-evenly ?spacing]
  (box
    :class class
    :style style
    :valign { valign ?: "center" }
    :halign { halign ?: "center" }
    :vexpand { vexpand ?: false }
    :hexpand { hexpand ?: false }
    :width { width ?: 0 }
    :height { height ?: 0 }
    :active { active ?: false }
    :tooltip { tooltip ?: false }
    :visible { visible ?: true }
    :orientation "v"
    :space-evenly { space-evenly ?: false }
    :spacing spacing
    (children)))
;; Vertical text
(defwidget vtext [?class text]
  (vbox
    :class { class ?: "" }
    (label
      :text text
      :angle 90)))
;; Vertical separator
(defwidget vsep [?class ?separator]
  (vtext
    :class "separator${ class ? "-${class}" : ""}"
    :text {separator ?: "|"} ))

;;╔═════════════════════════════════════════════════════════════════════════╗;;
;;║                           Scripts & Variables                           ║;;
;;╚═════════════════════════════════════════════════════════════════════════╝;;
;; Visibility flags
(defvar  secondsVisible     false)
(defvar  calendarVisible    false)
;; Mode or various flags
(defvar  weekView           false)
;; Info scripts that poll themselves
(deflisten bspwmInfo        "eww-bspwmInfo")
(deflisten timeInfo         "eww-time")
;; Info to poll at regular interval; but must have visibility tags
(defpoll secondsInfo
  :interval "1s"
  :run-while secondsVisible
  `date +%S`)

;;╔═════════════════════════════════════════════════════════════════════════╗;;
;;║                                 Widgets                                 ║;;
;;╚═════════════════════════════════════════════════════════════════════════╝;;


;; Workspace widget
(defwidget workspaces []
  (box
    :class "workspaces"
    :orientation "v"
    :halign "center"
    :valign "start"
    :valign "start"
    :space-evenly false
    (button
      :onclick "bspc desktop ${bspwmInfo.id} --layout next"
      :class "desktop-${bspwmInfo.mode}"
      :tooltip "${bspwmInfo.title}"
      "${bspwmInfo.icon}"
    )
    (vsep :separator "⸽")
    (for desktop in {bspwmInfo.desktops}
      (button
        :onclick "bspc desktop --focus ${desktop.id}"
        :class "desktop-${desktop.state}"
        "${desktop.name}"
      )
    )
  )
)
;; Time widgets
(defwidget clock []
  (eventbox
    :onhover        "${EWW_CMD} update secondsVisible=true"
    :onhoverlost    "${EWW_CMD} update secondsVisible=false"
    (vbox
      :class "clock"
      (vbox
        :class "clock-icon"
        "${timeInfo.clock.icon}"
      )
      (vbox
        :class "clock-hour"
        "${timeInfo.clock.hour}"
      )
      (vsep :separator ":")
      (vbox
        :class "clock-minute"
        "${timeInfo.clock.minute}"
      )
      (revealer
        :transition "slide-down"
        :reveal secondsVisible
        :duration "250ms"
        (vbox
          :class "clock-second"
          (vsep :separator ":")
          secondsInfo
        )
      )
    )
  )
)
(defwidget date []
  (eventbox
    :onhover        "${EWW_CMD} update calendarVisible=true"
    :onhoverlost    "${EWW_CMD} update calendarVisible=false"
    :onclick {weekView ? "${EWW_CMD} update weekView=false" : "${EWW_CMD} update weekView=true"}
    (overlay
      (revealer
        :transition "crossfade"
        :reveal {! weekView}
        :duration "500ms"
        (box
          :class "date"
          :orientation "v"
          :space-evenly "false"
            :spacing "2"
          (vbox
            :class "date-icon"
            "${timeInfo.calendar.icon}")
          (vbox
            :class "date-day"
            "${timeInfo.calendar.day}")
          (vbox
            :class "date-month"
            "${timeInfo.calendar.month}")
          (vbox
            :class "date-year"
            "${timeInfo.calendar.year}")))
      (revealer
        :transition "crossfade"
        :reveal weekView
          :duration "500ms"
        (box
          :class "date"
          :orientation "v"
          :space-evenly "false"
          :spacing "2"
          (vbox
            :class "date-icon"
            "${timeInfo.calendar.icon}")
          (vbox
              :class "date-day"
            "${timeInfo.week.day}")
          (vbox
            :class "date-week"
            "${timeInfo.week.week}")
          (vbox
            :class "date-year"
            "${timeInfo.calendar.year}"))))))

;;╔═════════════════════════════════════════════════════════════════════════╗;;
;;║                                 Windows                                 ║;;
;;╚═════════════════════════════════════════════════════════════════════════╝;;

;; Left bar
(defwindow leftbar
  :geometry (geometry
    :anchor "top left"
    :x "0px"
    :width "42px"
    :y "0px"
    :height "100%")
  :reserve (struts :distance "42px" :side "left")
  :monitor 0
  :stacking "fg"
  :wm-ignore false
  :windowtype "dock"
  (box
    :class "leftbar-area"
    :valign "center" 
    :halign "center" 
    :vexpand false
    :hexpand false
    :space-evenly true
    (box
      :class "bar-left"
      :valign "center"
      :halign "center"
      :orientation "v" 
      :vexpand false
      :hexpand false
      (box
        :class "bar-left-top"
        :valign "start"
        :halign "center"
        :orientation "v" 
        :space-evenly "false" 
        (workspaces))
      (box
        :class "bar-left-mid"
        :valign "end"
        :halign "center"
        :orientation "v" 
        :space-evenly "false" 
        (clock)
        (vsep :separator "⸽")
        (date))
      (box
        :class "bar-left-bot"
        :valign "end"
        :halign "center"
        :orientation "v" 
        :space-evenly "false" 
        (box "NA")))))
